/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/groups.js":
/*!*******************************!*\
  !*** ./src/scripts/groups.js ***!
  \*******************************/
/***/ (() => {

eval("var groupNumber = 0;\nwindow.addEventListener('DOMContentLoaded', askAfterLoading);\n\nfunction askAfterLoading() {\n  document.getElementById('0').onclick = function () {\n    changeGroup(this);\n  };\n\n  document.getElementById('1').onclick = function () {\n    changeGroup(this);\n  };\n\n  document.getElementById('2').onclick = function () {\n    changeGroup(this);\n  };\n\n  document.getElementById('3').onclick = function () {\n    changeGroup(this);\n  };\n\n  document.getElementById('4').onclick = function () {\n    changeGroup(this);\n  };\n\n  document.getElementById('5').onclick = function () {\n    changeGroup(this);\n  };\n\n  document.getElementById('6').onclick = function () {\n    changeGroup(this);\n  };\n\n  allStudents();\n}\n\nfunction changeGroup(element) {\n  groupNumber = parseInt(element.getAttribute('id'));\n\n  if (element.getAttribute('id') != '0') {\n    document.getElementById('title').innerHTML = \"Groupe \" + element.getAttribute('id');\n  } else {\n    document.getElementById('title').innerHTML = \"Aucun groupe\";\n  }\n\n  allStudents();\n}\n\nconst allStudents = async () => {\n  const requestOption = {\n    method: 'GET'\n  };\n  const response = await fetch('http://127.0.0.1:3000/groups/all', requestOption);\n  const students = await response.json();\n  fillStudentList(students);\n};\n\nfunction fillStudentList(studentsJson) {\n  const table = document.getElementById(\"displayGroup\");\n  table.innerHTML = \"<tr> <th>Numéro</th> <th>Nom</th> <th>Prénom</th> </tr>\";\n  const linesArray = [];\n  const numCells = [];\n  const nameCells = [];\n  const firstnameCells = [];\n  studentsJson.forEach(parentElement => {\n    if (parentElement['numGroup'] == groupNumber) {\n      const element = parentElement['student'];\n      const newLine = table.insertRow();\n      const newNumberCell = newLine.insertCell(0);\n      const newNameCell = newLine.insertCell(1);\n      const newFirstnameCell = newLine.insertCell(2);\n      const newChangeGroup = newLine.insertCell(3);\n      newNumberCell.innerHTML = element['numStudent'];\n      newNameCell.innerHTML = element['name'];\n      newFirstnameCell.innerHTML = element['firstnames'];\n      newChangeGroup.innerHTML = \"<button class=\\\"changeGroup\\\" type=\\\"button\\\" id=\\\"0-\" + element['numStudent'] + \"\\\">0</button>\";\n      newChangeGroup.innerHTML = newChangeGroup.innerHTML + \"<button class=\\\"changeGroup\\\" type=\\\"button\\\" id=\\\"1-\" + element['numStudent'] + \"\\\">1</button>\";\n      newChangeGroup.innerHTML = newChangeGroup.innerHTML + \"<button class=\\\"changeGroup\\\" type=\\\"button\\\" id=\\\"2-\" + element['numStudent'] + \"\\\">2</button>\";\n      newChangeGroup.innerHTML = newChangeGroup.innerHTML + \"<button class=\\\"changeGroup\\\" type=\\\"button\\\" id=\\\"3-\" + element['numStudent'] + \"\\\">3</button>\";\n      newChangeGroup.innerHTML = newChangeGroup.innerHTML + \"<button class=\\\"changeGroup\\\" type=\\\"button\\\" id=\\\"4-\" + element['numStudent'] + \"\\\">4</button>\";\n      newChangeGroup.innerHTML = newChangeGroup.innerHTML + \"<button class=\\\"changeGroup\\\" type=\\\"button\\\" id=\\\"5-\" + element['numStudent'] + \"\\\">5</button>\";\n      newChangeGroup.innerHTML = newChangeGroup.innerHTML + \"<button class=\\\"changeGroup\\\" type=\\\"button\\\" id=\\\"6-\" + element['numStudent'] + \"\\\">6</button>\";\n      linesArray.push(newLine);\n      numCells.push(newNumberCell);\n      nameCells.push(newNameCell);\n      firstnameCells.push(newFirstnameCell);\n    }\n  });\n  const groupsButtons = document.getElementsByClassName('changeGroup');\n  Array.prototype.forEach.call(groupsButtons, function (element) {\n    element.onclick = function () {\n      changeElementGroup(this);\n    };\n  });\n}\n\nconst changeElementGroup = async element => {\n  //Extraire numéro de groupe\n  const numGrp = parseInt(element.id[0]); //Extraire numéro d'étudiant\n\n  const numEtudiant = parseInt(element.id.substring(2, element.id.length)); //Récupérer l'étudiant correspondant\n\n  const requestOption = {\n    method: 'GET'\n  };\n  const response = await fetch('http://127.0.0.1:3000/groups/all', requestOption);\n  const students = await response.json();\n  var findedStudent = null;\n  students.forEach(parentElement => {\n    const element = parentElement['student'];\n\n    if (element['numStudent'] == numEtudiant) {\n      findedStudent = element;\n    }\n  }); //Supprimer l'ancienne entrée du groupe\n\n  await removeInGroup(groupNumber, findedStudent); //Ajouter la nouvelle entrée\n\n  const newStudentInGroup = {\n    numGroup: numGrp,\n    student: findedStudent\n  };\n  const bodyContent = JSON.stringify(newStudentInGroup);\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: bodyContent\n  };\n  const response2 = await fetch('http://localhost:3000/groups/add', requestOptions); //Mise à jour de la table\n\n  allStudents();\n};\n\nconst removeInGroup = async (numGroupToRemove, studentToRemove) => {\n  const newStudentInGroup = {\n    numGroup: numGroupToRemove,\n    student: studentToRemove\n  }; // body is built from created student\n\n  const bodyContent2 = JSON.stringify(newStudentInGroup); // options for a POST method that conains json\n\n  const requestOptions2 = {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: bodyContent2\n  }; // send the request to the server to create the entry corresponding to book\n\n  const response2 = await fetch('http://localhost:3000/groups/remove', requestOptions2);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/groups.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/scripts/groups.js"]();
/******/ 	
/******/ })()
;